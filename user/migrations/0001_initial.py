# Generated by Django 4.0.5 on 2022-08-07 19:05

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Second name')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('buyer', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('non', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InnovestSubcribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='We will be sending you new jobs', max_length=100, verbose_name='Subscriber email')),
                ('subscribe', models.CharField(blank=True, default='Innovest subscriber', max_length=1000, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InnovestUsersMessages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_user', models.CharField(blank=True, max_length=100, null=True)),
                ('names', models.CharField(blank=True, max_length=100, null=True, verbose_name='client name')),
                ('email', models.EmailField(max_length=225)),
                ('message', models.CharField(blank=True, default='Innovest Message', max_length=1000, null=True)),
                ('inform_us', models.CharField(help_text='Ask question, Inform us on anything.', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='current sesion')),
                ('light', models.BooleanField(default=True)),
                ('accent', models.CharField(choices=[('g', 'Green'), ('r', 'Red'), ('b', 'Blue')], default='g', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Second name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='media/profiles/staff/avatars/')),
                ('gender', models.CharField(choices=[('s', 'Select'), ('m', 'Male'), ('f', 'Female')], default='s', max_length=1)),
                ('phone', models.CharField(blank=True, help_text='Business number for communication', max_length=32, null=True)),
                ('resume', ckeditor.fields.RichTextField(blank=True, help_text='Use 1000 words only. To be pulished in the website.', max_length=1000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='media/profiles/employees/avatars/')),
                ('gender', models.CharField(choices=[('s', 'Select'), ('m', 'Male'), ('f', 'Female')], default='s', max_length=1)),
                ('phone', models.CharField(blank=True, max_length=32, null=True)),
                ('address', models.CharField(blank=True, help_text='Include your city or your area.', max_length=50, null=True)),
                ('resume', models.FileField(blank=True, help_text='Attach your resume most prefferably in word formart.', null=True, upload_to='media/profiles/employees/resumes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
